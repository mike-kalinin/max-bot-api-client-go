// Code generated by MockGen. DO NOT EDIT.
// Source: configservice.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigInterface is a mock of ConfigInterface interface.
type MockConfigInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigInterfaceMockRecorder
}

// MockConfigInterfaceMockRecorder is the mock recorder for MockConfigInterface.
type MockConfigInterfaceMockRecorder struct {
	mock *MockConfigInterface
}

// NewMockConfigInterface creates a new mock instance.
func NewMockConfigInterface(ctrl *gomock.Controller) *MockConfigInterface {
	mock := &MockConfigInterface{ctrl: ctrl}
	mock.recorder = &MockConfigInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigInterface) EXPECT() *MockConfigInterfaceMockRecorder {
	return m.recorder
}

// BotTokenCheckInInputSteam mocks base method.
func (m *MockConfigInterface) BotTokenCheckInInputSteam() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BotTokenCheckInInputSteam")
	ret0, _ := ret[0].(bool)
	return ret0
}

// BotTokenCheckInInputSteam indicates an expected call of BotTokenCheckInInputSteam.
func (mr *MockConfigInterfaceMockRecorder) BotTokenCheckInInputSteam() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BotTokenCheckInInputSteam", reflect.TypeOf((*MockConfigInterface)(nil).BotTokenCheckInInputSteam))
}

// BotTokenCheckString mocks base method.
func (m *MockConfigInterface) BotTokenCheckString() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BotTokenCheckString")
	ret0, _ := ret[0].(string)
	return ret0
}

// BotTokenCheckString indicates an expected call of BotTokenCheckString.
func (mr *MockConfigInterfaceMockRecorder) BotTokenCheckString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BotTokenCheckString", reflect.TypeOf((*MockConfigInterface)(nil).BotTokenCheckString))
}

// GetDebugLogChat mocks base method.
func (m *MockConfigInterface) GetDebugLogChat() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDebugLogChat")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetDebugLogChat indicates an expected call of GetDebugLogChat.
func (mr *MockConfigInterfaceMockRecorder) GetDebugLogChat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDebugLogChat", reflect.TypeOf((*MockConfigInterface)(nil).GetDebugLogChat))
}

// GetDebugLogMode mocks base method.
func (m *MockConfigInterface) GetDebugLogMode() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDebugLogMode")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetDebugLogMode indicates an expected call of GetDebugLogMode.
func (mr *MockConfigInterfaceMockRecorder) GetDebugLogMode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDebugLogMode", reflect.TypeOf((*MockConfigInterface)(nil).GetDebugLogMode))
}

// GetHttpBotAPITimeOut mocks base method.
func (m *MockConfigInterface) GetHttpBotAPITimeOut() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpBotAPITimeOut")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetHttpBotAPITimeOut indicates an expected call of GetHttpBotAPITimeOut.
func (mr *MockConfigInterfaceMockRecorder) GetHttpBotAPITimeOut() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpBotAPITimeOut", reflect.TypeOf((*MockConfigInterface)(nil).GetHttpBotAPITimeOut))
}

// GetHttpBotAPIUrl mocks base method.
func (m *MockConfigInterface) GetHttpBotAPIUrl() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpBotAPIUrl")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHttpBotAPIUrl indicates an expected call of GetHttpBotAPIUrl.
func (mr *MockConfigInterfaceMockRecorder) GetHttpBotAPIUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpBotAPIUrl", reflect.TypeOf((*MockConfigInterface)(nil).GetHttpBotAPIUrl))
}

// GetHttpBotAPIVersion mocks base method.
func (m *MockConfigInterface) GetHttpBotAPIVersion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpBotAPIVersion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHttpBotAPIVersion indicates an expected call of GetHttpBotAPIVersion.
func (mr *MockConfigInterfaceMockRecorder) GetHttpBotAPIVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpBotAPIVersion", reflect.TypeOf((*MockConfigInterface)(nil).GetHttpBotAPIVersion))
}
